#MySQL配置  
hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
#hibernate.dialect=org.hibernate.dialect.MySQL5Dialect  
#hibernate.dialect=org.hibernate.dialect.MySQLDialect  
jdbc.url=jdbc:mysql://localhost:3306/emsc?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull
jdbc.driver=com.mysql.jdbc.Driver
jdbc.username=root
jdbc.password=123456
  
hibernate.show_sql=true
hibernate.format_sql=false
hibernate.use_sql_comments=false
hibernate.cache.use_second_level_cache=false
  
#EhCache  
hibernate.cache.use_query_cache=false
hibernate.cache.provider_class=net.sf.ehcache.hibernate.EhCacheProvider
hibernate.cache.region.factory_class=org.hibernate.cache.ehcache.EhCacheRegionFactory
  
#hibernate.hbm2ddl.auto 自动创建|更新|验证数据库表结构
hibernate.hbm2ddl.auto=none
#强制Hibernate按照被更新数据的主键，为SQL更新排序。这么做将减少在高并发系统中事务的死锁。
hibernate.order_updates=true
hibernate.jdbc.batch_size=30
hibernate.jdbc.fetch_size=100
hibernate.max_fetch_depth=2
  
#Hibernate4 C3P0  
hibernate.connection.pool_size=5
hibernate.c3p0.min_size=5
hibernate.c3p0.max_size=200
hibernate.c3p0.timeout=2000
hibernate.c3p0.idle_test_period=10
hibernate.c3p0.acquire_increment=5
hibernate.c3p0.max_statements=50


#hibernate4.0事务的模式  
#1:org.hibernate.context.internal.ThreadLocalSessionContext - 当前session通过当前执行的线程来跟踪和界定。  
#2:org.hibernate.context.internal.JTASessionContext - 当前session根据JTA来跟踪和界定。这和以前的仅支持JTA的方法是完全一样的。  
#3:org.hibernate.context.internal.ManagedSessionContext  
#4:org.springframework.orm.hibernate4.SpringSessionContext - spring的事务管理。  
hibernate.current_session_context_class=org.springframework.orm.hibernate4.SpringSessionContext
#Hibernate4.0的查询翻译器：  
hibernate.query.factory_class=org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
#Hibernate3.0的查询翻译器：  
#hibernate.query.factory_class=org.hibernate.hql.ast.ASTQueryTranslatorFactory  
#Hibernate2.1的查询翻译器  
#hibernate.query.factory_class=org.hibernate.hql.classic.ClassicQueryTranslatorFactory  
  
  
#Connection Pooling  
  
#acquireIncrement: 当连接池中的连接耗尽的时候一次同时获取的连接数。Default: 3  
#idleConnectionTestPeriod:检查数据库连接池中控线连接的间隔时间，单位是分，默认值：240，如果要取消则设置为0  
#idleMaxAge:连接池中未使用的链接最大存活时间，单位是分，默认值：60，如果要永远存活设置为0  
#maxConnectionsPerPartition:每个分区最大的连接数  
#minConnectionsPerPartition:每个分区最小的连接数  
#partitionCount:分区数，默认值2，最小1，推荐3-4，视应用而定  
#acquireIncrement:每次去拿数据库连接的时候一次性要拿几个，默认值：2  
#statementsCacheSize:缓存prepared statements的大小，默认值：0  
#releaseHelperThreads:每个分区释放链接助理进程的数量，默认值：3，除非你的一个数据库连接的时间内做了很多工作，不然过多的助理进程会影响你的性能   
  
#C3P0  
c3p0.acquireIncrement=10
c3p0.initialPoolSize=15
c3p0.minPoolSize=30
c3p0.maxPoolSize=120
c3p0.maxIdleTime=30
c3p0.idleConnectionTestPeriod=30
c3p0.maxStatements=0
c3p0.numHelperThreads=100
c3p0.checkoutTimeout=0
c3p0.validate=true